@*@inject ISnackbar Snackbar
@using Models
@using Microsoft.AspNetCore.Http;
@using Site.Data

    <MudPaper @ondragenter="@SetDragClass" @ondragleave="@ClearDragClass" @ondragend="@ClearDragClass" Height="450px" Width="80%" Outlined="true" Class="@DragClass" Style="margin: 0 auto; border:3px dashed #bdbdbd; background-color: #e0e0e0;">
        @if (!Clearing)
        {
            <InputFile OnChange="OnInputFileChanged" class="absolute mud-width-full mud-height-full overflow-hidden z-2" style="opacity: 0; border: 15px; top: 0px" accept=".docx, .doc, .pdf" />
        }
        <MudText Class="DragNDrop">@MudText</MudText>

        @foreach (var file in fileNames)
        {
            <div class="container">
                <MudChip Icon="@Icons.Material.Filled.DocumentScanner" Color="Color.Dark" Text="@file" />
            </div>
        }
    </MudPaper>

    <MudToolBar DisableGutters="true" Class="gap-4">
        <MudButton OnClick="Upload" Disabled="@(!fileNames.Any())" Class="button" DisableRipple="true" DisableElevation="true" type="submit">Загрузить</MudButton>
        <MudButton OnClick="Clear" Disabled="@(!fileNames.Any())" Class="button" DisableRipple="true" DisableElevation="true">Очистить</MudButton>

        <style>
            .container {
                text-align:center;
                width: 100%;
                margin: 0 auto;
            }

            .button {
                color: #090909;
                padding: 0.7em 1.7em;
                font-size: 18px;
                border-radius: 0.5em;
                background: #e8e8e8;
                border: 1px solid #e8e8e8;
                transition: all .3s;
                box-shadow: 6px 6px 12px #c5c5c5, -6px -6px 12px #ffffff;
                font-family: 'Montserrat', sans-serif;
                font-weight: 300;
            }

            .button:hover {
                box-shadow: 6px 6px 12px #c5c5c5, -6px -6px 12px #ffffff;
            }

            .button:active {
                color: #666;
                box-shadow: inset 4px 4px 12px #c5c5c5, inset -4px -4px 12px #ffffff;
            }

            .gap-4 {
                text-align: center;
                margin: 1% auto;
                display: flex;
                justify-content: center;
            }

            .DragNDrop {
                margin: 19% auto;
                font-family: 'Montserrat', sans-serif;
                color: #bdbdbd;
                font-weight: 900;
                text-align: center;
                justify-content: center;
            }
        </style>
    </MudToolBar>

    @code {
        public string MudText = "Перетащите файл сюда или нажмите, чтобы загрузить.";

        private bool Clearing = false;
        private static string DefaultDragClass = "relative rounded-lg border-dashed border-2 pa-4 mt-4 mud-width-full mud-height-full";
        private string DragClass = DefaultDragClass;

        private List<string> fileNames = new List<string>();
        private List<string> allowedContentTypes = new List<string>() { "application/msword", "application/pdf", "application/vnd.openxmlformats-officedocument.wordprocessingml.document" };

        IBrowserFile file;

        private void OnInputFileChanged(InputFileChangeEventArgs e)
        {
            ClearDragClass();
            file = e.File;

            if (fileNames.Count == 1)
                fileNames[0] = file.Name;
                MudText = "";

            if (fileNames.Count >= 1)
                return;

            if (allowedContentTypes.Contains(file.ContentType))
                fileNames.Add(file.Name);
        }

        private async Task Clear()
        {
            Clearing = true;
            fileNames.Clear();
            ClearDragClass();
            await Task.Delay(100);
            Clearing = false;
            MudText = "Перетащите файл сюда или нажмите, чтобы загрузить.";
        }

        private async void Upload()
        {
            Snackbar.Configuration.PositionClass = Defaults.Classes.Position.TopCenter;
            Snackbar.Add("TODO: Upload your files!", Severity.Normal);
            var ms = new MemoryStream();
            await file.OpenReadStream(5120000000).CopyToAsync(ms);

            await File.WriteAllBytesAsync($"/Users/Alexander/Projects/Site/Site/wwwroot/Files/{file.Name}", ms.ToArray());
        }

        private void SetDragClass()
        {
            DragClass = $"{DefaultDragClass} mud-border-primary";
        }

        private void ClearDragClass()
        {
            DragClass = DefaultDragClass;
        }
    }*@